<IfModule mod_ssl.c>
    <VirtualHost _default_:443>

        ServerName rustbeltrebellion.com
        ServerAlias *.rustbeltrebellion.com
        DocumentRoot /var/www/https
        <Directory /var/www/https/>
            Options Indexes FollowSymLinks MultiViews
            AllowOverride None
            Order allow,deny
            allow from all
        </Directory>

        <IfModule mod_fastcgi.c>
            AddType application/x-httpd-fastphp5 .php
            Action application/x-httpd-fastphp5 /php5-fcgi
            Alias /php5-fcgi /usr/lib/cgi-bin/php5-fcgi_rustbeltrebellion.com
            FastCgiExternalServer /usr/lib/cgi-bin/php5-fcgi_rustbeltrebellion.com -socket /var/run/php5-fpm rustbeltrebellion.com.sock -pass-header Authorization
        </IfModule>

        LogLevel warn

        ErrorLog /var/www/logs/error-ssl.log
        CustomLog /var/www/logs/access-ssl.log combined

        Include /etc/apache2/includes/vhost-ssl

        #   The StartSSL Certificate

        SSLCertificateFile /var/www/certs/2015/start-ssl/ssl.crt
        SSLCertificateKeyFile /var/www/certs/2015/start-ssl/ssl.key
        SSLCertificateChainFile /var/www/certs/2015/start-ssl/sub.class2.server.ca.pem
        SSLCACertificateFile /var/www/certs/2015/start-ssl/ca.pem

        
        #   SSL Protocol Adjustments:
        #   The safe and default but still SSL/TLS standard compliant shutdown
        #   approach is that mod_ssl sends the close notify alert but doesn't wait for
        #   the close notify alert from client. When you need a different shutdown
        #   approach you can use one of the following variables:
        #   o ssl-unclean-shutdown:
        #     This forces an unclean shutdown when the connection is closed, i.e. no
        #     SSL close notify alert is send or allowed to received.  This violates
        #     the SSL/TLS standard but is needed for some brain-dead browsers. Use
        #     this when you receive I/O errors because of the standard approach where
        #     mod_ssl sends the close notify alert.
        #   o ssl-accurate-shutdown:
        #     This forces an accurate shutdown when the connection is closed, i.e. a
        #     SSL close notify alert is send and mod_ssl waits for the close notify
        #     alert of the client. This is 100% SSL/TLS standard compliant, but in
        #     practice often causes hanging connections with brain-dead browsers. Use
        #     this only for browsers where you know that their SSL implementation
        #     works correctly.
        #   Notice: Most problems of broken clients are also related to the HTTP
        #   keep-alive facility, so you usually additionally want to disable
        #   keep-alive for those clients, too. Use variable nokeepalive for this.
        #   Similarly, one has to force some clients to use HTTP/1.0 to workaround
        #   their broken HTTP/1.1 implementation. Use variables downgrade-1.0 and
        #   force-response-1.0 for this.
        BrowserMatch "MSIE [2-6]" \
            nokeepalive ssl-unclean-shutdown \
            downgrade-1.0 force-response-1.0
            # MSIE 7 and newer should be able to use keepalive
        BrowserMatch "MSIE [17-9]" ssl-unclean-shutdown

    </VirtualHost>
</IfModule>
